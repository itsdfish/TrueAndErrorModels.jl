p₁₁₁,p₁₁₂,p₁₂₁,p₁₂₂,p₂₁₁,p₂₁₂,p₂₂₁,p₂₂₂ = rand(Dirichlet(fill(1, 8)))
# choice pattern: ((1, 1, 1), (1, 1, 1)) 
θ[1] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 1, 1), (1, 1, 2)) 
θ[2] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 1, 1), (1, 2, 1)) 
θ[3] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 1, 1), (1, 2, 2)) 
θ[4] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 1, 1), (2, 1, 1)) 
θ[5] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 1, 1), (2, 1, 2)) 
θ[6] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 1, 1), (2, 2, 1)) 
θ[7] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 1, 1), (2, 2, 2)) 
θ[8] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 1, 2), (1, 1, 1)) 
θ[9] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 1, 2), (1, 1, 2)) 
θ[10] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 1, 2), (1, 2, 1)) 
θ[11] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 1, 2), (1, 2, 2)) 
θ[12] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 1, 2), (2, 1, 1)) 
θ[13] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 1, 2), (2, 1, 2)) 
θ[14] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 1, 2), (2, 2, 1)) 
θ[15] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 1, 2), (2, 2, 2)) 
θ[16] = 
p₁₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 2, 1), (1, 1, 1)) 
θ[17] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 2, 1), (1, 1, 2)) 
θ[18] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 2, 1), (1, 2, 1)) 
θ[19] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 2, 1), (1, 2, 2)) 
θ[20] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 2, 1), (2, 1, 1)) 
θ[21] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 2, 1), (2, 1, 2)) 
θ[22] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 2, 1), (2, 2, 1)) 
θ[23] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 2, 1), (2, 2, 2)) 
θ[24] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 2, 2), (1, 1, 1)) 
θ[25] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 2, 2), (1, 1, 2)) 
θ[26] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 2, 2), (1, 2, 1)) 
θ[27] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 2, 2), (1, 2, 2)) 
θ[28] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((1, 2, 2), (2, 1, 1)) 
θ[29] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((1, 2, 2), (2, 1, 2)) 
θ[30] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((1, 2, 2), (2, 2, 1)) 
θ[31] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((1, 2, 2), (2, 2, 2)) 
θ[32] = 
p₁₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 1, 1), (1, 1, 1)) 
θ[33] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 1, 1), (1, 1, 2)) 
θ[34] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 1, 1), (1, 2, 1)) 
θ[35] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 1, 1), (1, 2, 2)) 
θ[36] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 1, 1), (2, 1, 1)) 
θ[37] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 1, 1), (2, 1, 2)) 
θ[38] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 1, 1), (2, 2, 1)) 
θ[39] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 1, 1), (2, 2, 2)) 
θ[40] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 1, 2), (1, 1, 1)) 
θ[41] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 1, 2), (1, 1, 2)) 
θ[42] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 1, 2), (1, 2, 1)) 
θ[43] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 1, 2), (1, 2, 2)) 
θ[44] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 1, 2), (2, 1, 1)) 
θ[45] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 1, 2), (2, 1, 2)) 
θ[46] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 1, 2), (2, 2, 1)) 
θ[47] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 1, 2), (2, 2, 2)) 
θ[48] = 
p₁₁₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 2, 1), (1, 1, 1)) 
θ[49] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 2, 1), (1, 1, 2)) 
θ[50] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 2, 1), (1, 2, 1)) 
θ[51] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 2, 1), (1, 2, 2)) 
θ[52] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 2, 1), (2, 1, 1)) 
θ[53] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 2, 1), (2, 1, 2)) 
θ[54] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 2, 1), (2, 2, 1)) 
θ[55] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 2, 1), (2, 2, 2)) 
θ[56] = 
p₁₁₁ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 2, 2), (1, 1, 1)) 
θ[57] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 2, 2), (1, 1, 2)) 
θ[58] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 2, 2), (1, 2, 1)) 
θ[59] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 2, 2), (1, 2, 2)) 
θ[60] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) 
# choice pattern: ((2, 2, 2), (2, 1, 1)) 
θ[61] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ 
# choice pattern: ((2, 2, 2), (2, 1, 2)) 
θ[62] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) 
# choice pattern: ((2, 2, 2), (2, 2, 1)) 
θ[63] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ 
# choice pattern: ((2, 2, 2), (2, 2, 2)) 
θ[64] = 
p₁₁₁ * ϵ₁ * ϵ₂ * ϵ₃ * ϵ₁ * ϵ₂ * ϵ₃ + 
p₁₁₂ * ϵ₁ * ϵ₂ * (1 - ϵ₃) * ϵ₁ * ϵ₂ * (1 - ϵ₃) + 
p₁₂₁ * ϵ₁ * (1 - ϵ₂) * ϵ₃ * ϵ₁ * (1 - ϵ₂) * ϵ₃ + 
p₁₂₂ * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) * ϵ₁ * (1 - ϵ₂) * (1 - ϵ₃) + 
p₂₁₁ * (1 - ϵ₁) * ϵ₂ * ϵ₃ * (1 - ϵ₁) * ϵ₂ * ϵ₃ + 
p₂₁₂ * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) * (1 - ϵ₁) * ϵ₂ * (1 - ϵ₃) + 
p₂₂₁ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ * (1 - ϵ₁) * (1 - ϵ₂) * ϵ₃ + 
p₂₂₂ * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) * (1 - ϵ₁) * (1 - ϵ₂) * (1 - ϵ₃) 
